[ ] - Look into ray-tracing basics for ideas in what can be changed at a
fundamental level for super-textures

[ ] - Figure out a more simplified but flexible "tile" rendering system

[ ] - Get graphics pipeline (adjusted as necessary) into the wiki

[ ] - Render humanoid shadow from flash shapes rather than the svg-based bitmap



---------


Scrolling
http://github.com/Glidias/BitmapScroller  (uses alchemy mem)


Line-of-site shadows
http://hesselboom.com/2010/02/experimenting-with-simulation-of-hard-edged-shadows/


Misc:

- Occlusion based on character location
- Distant tiles, high z values, etc.
- Rendering behind walls, ceilings
- Holes, trapdoors, skylights
- Flying, floating
- Swimming


* Small overhand land
* Pillar desert
* Spongeland
* Lookout peak
* Eagle's peak (very very high)


-------
(1) Create basic/static terrain w/ most/all permutations present (inc. caves)
(2) Display horizontal tiles (strict rectangular w/ walls down(?))
(3) Move center orientation in horizontal directions
(4) Move position vertically
(5) Follow terrain

(6) Rotate
(7) Neighbor based smoothing tiles
(8) Vertical tiles
(9) Basic color generation

Then two paths: Auto-terrain and Better tile rendering
	
Eventually(?)
Erosion
Real-time flow / displacement
