
// add the folder containing gamelib2d to the projects classpaths
import gamelib2d.Def;
import gamelib2d.Utils;
import gamelib2d.TileSet;
import gamelib2d.Layer;
import gamelib2d.Keys;
import gamelib2d.Utils;
import gamelib2d.Timing;

import flash.events.Event;
import flash.events.KeyboardEvent;
import flash.events.MouseEvent;
import flash.display.Sprite;


class Main
{
	static var screen: Sprite;
	static var frame: Int = -1;
	
	static var backgroundTiles: TileSet;
	static var backgroundLayer: Layer;
	
	static var foregroundTiles: TileSet;
	static var foregroundLayer: Layer;
	
	static var x: Float = 0;
	static var y: Float = 0;
	static var speedX: Float = 1.0;
	static var speedY: Float = 1.0;

	public static inline var KEY_LEFT   =  flash.ui.Keyboard.LEFT;
	public static inline var KEY_RIGHT  =  flash.ui.Keyboard.RIGHT;
	public static inline var KEY_UP     =  flash.ui.Keyboard.UP;
	public static inline var KEY_DOWN   =  flash.ui.Keyboard.DOWN;
	
	
	function new ()
	{
		// new should not use the stage
		screen = new Sprite ();
		screen.addEventListener(Event.ENTER_FRAME, onEnterFrame);
	}
	
	
	function init ()
	{
		flash.Lib.current.addChild (screen);

		//Def.STAGE_W = 480;
		//Def.STAGE_H = 360;
		Def.STAGE_W = screen.stage.stageWidth;
		Def.STAGE_H = screen.stage.stageHeight;
		screen.stage.scaleMode = flash.display.StageScaleMode.EXACT_FIT;

		backgroundTiles = new TileSet (screen);
		backgroundTiles.init (new BackgroundInfo ());  // BackgroundInfo.hx is generated by Tile Studio
		backgroundLayer = new Layer (screen);
		backgroundLayer.init (backgroundTiles, new BackgroundMap1Info (), false, 1.0, 1.0, mrp_tile, mrp_tile, true, true);

		foregroundTiles = new TileSet (screen);
		foregroundTiles.init (new BlocksInfo ());		
		foregroundLayer = new Layer (screen);
		foregroundLayer.init (foregroundTiles, new BlocksMap1Info (), true, 1.0, 1.0, mrp_tile, mrp_tile, true, true);
		
		//flash.Lib.current.stage.addEventListener (MouseEvent.CLICK, onClick);
	    
		Keys.init ();
		flash.Lib.current.stage.addEventListener (KeyboardEvent.KEY_DOWN, onKeyDown);
		flash.Lib.current.stage.addEventListener (KeyboardEvent.KEY_UP, onKeyUp);
		
		Timing.init ();
	}
	

	function runGameLogic ()
	{
		if (x + speedX < 0 || x + speedX >= foregroundLayer.width () - Def.STAGE_W)
			speedX = -speedX;
		if (y + speedY < 0 || y + speedY >= foregroundLayer.height () - Def.STAGE_H)
			speedY = -speedY;

		speedX += (Utils.boolToInt (Keys.keyIsDown (KEY_RIGHT)) - Utils.boolToInt (Keys.keyIsDown (KEY_LEFT))) / 4;
		speedY += (Utils.boolToInt (Keys.keyIsDown (KEY_DOWN)) - Utils.boolToInt (Keys.keyIsDown (KEY_UP))) / 4;
			
		x += speedX;
		y += speedY;

	}
	
	
	function onEnterFrame (d: Dynamic)
	{
		frame++;
		if (frame == 0)
			init ();
			
		for (i in 0...Timing.logicFrames ())
			runGameLogic ();
			
		backgroundLayer.update ();
		foregroundLayer.update ();
		backgroundLayer.moveTo (x / 2, y / 2);
		foregroundLayer.moveTo (x, y);
		backgroundLayer.draw ();
		foregroundLayer.draw ();
	}
	
	
	function onKeyDown (event: KeyboardEvent)
	{
		var repeat: Bool = Keys.keyIsDown (event.keyCode);
		if (! repeat)
			Keys.setKeyStatus (event.keyCode, true);
	}
	
	
	function onKeyUp (event: KeyboardEvent)
	{
		Keys.setKeyStatus (event.keyCode, false);
	}
	
	
	static function main ()
	{
#if debug
		org.flashdevelop.utils.FlashConnect.redirect();
#end

		new Main ();
	}
}